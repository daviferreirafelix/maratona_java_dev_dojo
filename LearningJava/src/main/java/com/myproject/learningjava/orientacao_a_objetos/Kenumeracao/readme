Uma classe do tipo enum é uma classe especial onde todos os seus atributos são constantes. É pra ser utilizada quando
existe uma quantidade de tipos/opções para uma mesma propriedade e, por segurança e praticidade, quer forçar esses tipos
desta propriedade determinando eles dentro da classe, o que pode ser escolhido/tipado através da associação entre elas,
evitando quebra de código ou inconsistência de dados

Quando é criada uma enumeração, basciamente está sendo chamado o construtor dela, portanto, para atribuir um valor que
represente uma propriedade de uma classe enumerada, este deve ser passado no construtor da classe
(o construtor de uma enum é privado) e na propriedade de acesso que ele pertencerá. Isto é eficiente para dar mais
características a uma propriedade enumerada

Antes de tudo, só é possível passar o valor que representa um tipo enumerado a uma propriedade pois os tipos enumerados são
os primeiros a terem seus valores vindos do construtor inicializados na chamada da classe, com isso, a propriedade que
receberá os valores representantes não pode ser escrita antes das enumerações

Tudo oq está dentro de uma classe enum é automaticamente atrelado a suas enumerações, ou seja, qualquer enumeração de
uma classe enum tem acesso a qualquer método ou propriedade dentro desta classe enum
As enumerações tem inclusive uma funcionalidade maravilhosa: a sobrescrita dos métodos dentro da classe enum.
Com isso, ao abrir chaves ao lado da enumeração desejada, você pode atribuir aquela opção um comportamento específico
sobrescrevendo um método abstrato (método sem corpo, que deve ser obrigatoriamente sobrescrito) com um comportamento
específico para aquela enumeração específica, diminuindo consideravelmente a quantidade de condicionais dentro do código